# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile

## Evolutions
# https://www.playframework.com/documentation/latest/Evolutions
# ~~~~~
# Evolutions allows database scripts to be automatically run on startup in dev mode
# for database migrations. You must enable this by adding to build.sbt:
#
# libraryDependencies += evolutions
#
play.evolutions {
  # You can disable evolutions for a specific datasource if necessary
  #db.default.enabled = false
  db.default.autoApply = true
}

## Database Connection Pool
# https://www.playframework.com/documentation/latest/SettingsJDBC
# ~~~~~
# Play doesn't require a JDBC database to run, but you can easily enable one.
#
# libraryDependencies += jdbc
#
play.db {
  # The combination of these two settings results in "db.default" as the
  # default JDBC pool:
  #config = "db"
  #default = "default"

  # Play uses HikariCP as the default connection pool.  You can override
  # settings by changing the prototype:
  prototype {
    # Sets a fixed JDBC connection pool size of 50
    #hikaricp.minimumIdle = 50
    #hikaricp.maximumPoolSize = 50
  }
}

# Sets up application on startup, specifically DB contents,
# should be replaced by evolutions once I get how those work with new slick
play.modules.enabled += "misc.OnStartupModule"

play.filters.disabled += play.filters.csrf.CSRFFilter
play.filters.disabled += play.filters.hosts.AllowedHostsFilter
## JDBC Datasource
# https://www.playframework.com/documentation/latest/JavaDatabase
# https://www.playframework.com/documentation/latest/ScalaDatabase
# ~~~~~
# Once JDBC datasource is set up, you can work with several different
# database options:
#
# Slick (Scala preferred option): https://www.playframework.com/documentation/latest/PlaySlick
# JPA (Java preferred option): https://playframework.com/documentation/latest/JavaJPA
# EBean: https://playframework.com/documentation/latest/JavaEbean
# Anorm: https://www.playframework.com/documentation/latest/ScalaAnorm
#
db {
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`

  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database
  //  default.driver = org.h2.Driver
  //  default.url = "jdbc:h2:mem:play"
  //  default.username = "root"
  //  default.password = "re-l124c41"


  # You can turn on SQL logging for any datasource
  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements
  #default.logSql=true
}

// to switch default error handler to json from http to test from clients
play.http.errorHandler = play.api.http.JsonHttpErrorHandler

// if hikariCP maxpoolsize is numThreads*5 then this is ok
slick.dbs.default.db.numThreads = 3

//Have no idea if this is the poper way. But now for dev and test H2 is used and Prod is only used in prod mode
slick.dbs.test.profile = "slick.jdbc.H2Profile$"
slick.dbs.test.db.driver = "org.h2.Driver"
slick.dbs.test.db.url = "jdbc:h2:mem:play;DB_CLOSE_DELAY=-1"

slick.dbs.prod.profile = "slick.jdbc.PostgresProfile$"
slick.dbs.prod.db.driver = "org.postgresql.Driver"
slick.dbs.prod.db.url = "jdbc:postgresql://localhost:5432/yalta"#?user=yaltaapp&password=Just4m3"
slick.dbs.prod.db.user = "yaltaapp"
slick.dbs.prod.db.password = "Just4m3" # pass must updated here or be provided to proper-main as -Dslick.dbs.prod.db.password

slick.dbs.default = ${slick.dbs.test}